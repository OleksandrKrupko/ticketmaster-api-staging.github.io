{"version":3,"file":"./products-and-docs/widgets/map/1.0.0/lib/main-widget.js","sources":["webpack:///webpack/bootstrap 7b99981d7fb229360757","webpack:///products-and-docs/widgets/helpers/universe-plugin.js","webpack:///products-and-docs/widgets/helpers/widgets-analytics.js","webpack:///products-and-docs/widgets/map/1.0.0/src/main-widget.es6"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 7b99981d7fb229360757","const service = {\r\n  embedUniversePlugin,\r\n};\r\nexport default service\r\n\r\nfunction embedUniversePlugin() {\r\n  let id = 'id_universe_widget';\r\n  if( !document.getElementById(id) ){\r\n    let script = document.createElement('script');\r\n    script.setAttribute('src', 'https://www.universe.com/embed.js');\r\n    script.setAttribute('type', 'text/javascript');\r\n    script.setAttribute('charset', 'UTF-8');\r\n    script.setAttribute('id', id);\r\n    (document.head || document.getElementsByTagName('head')[0]).appendChild(script);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// products-and-docs/widgets/helpers/universe-plugin.js","const service = {\r\n  initialize,\r\n  sendEvent,\r\n  getStringEventHandler,\r\n};\r\nexport default service;\r\n\r\nexport const TM_TRACKER_ID = 'UA-78315612-1';\r\n\r\nexport const DEVPORT_TRACKER_ID = 'UA-114077619-1';\r\nexport const DEVPORT_TRACKER_ALIAS = 'tmOpenPlatform';\r\n\r\nexport const EVENT_CATEGORY = {\r\n  MAP_WIDGET: 'MapWidget',\r\n  CALENDAR_WIDGET: 'CalendarWidget',\r\n  COUNTDOWN_WIDGET: 'CountdownWidget',\r\n  EVENT_DISCOVERY_WIDGET: 'EventDiscoveryWidget',\r\n};\r\n\r\nexport const EVENT_NAME = {\r\n  RENDERED: 'rendered',\r\n  LOAD: 'load',\r\n  BUY_BUTTON_CLICK: 'buyButtonClick',\r\n  EVENT_NAME_CLICK: 'eventNameClick',\r\n};\r\n\r\nexport const CUSTOM_DIMENSIONS = {\r\n  API_KEY: 'dimension1',\r\n};\r\n\r\nfunction sendEvent(eventOptions) {\r\n  ga(`${DEVPORT_TRACKER_ALIAS}.send`, 'event', eventOptions);\r\n};\r\n\r\nfunction initialize(widgetCategory) {\r\n  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\r\n    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\r\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\r\n  })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\r\n\r\n  ga('create', TM_TRACKER_ID, 'auto');\r\n  ga('create', DEVPORT_TRACKER_ID, 'auto', DEVPORT_TRACKER_ALIAS);\r\n\r\n  ga('send', 'pageview');\r\n  service.sendEvent({\r\n    eventCategory: widgetCategory,\r\n    eventAction: EVENT_NAME.LOAD,\r\n  })\r\n};\r\n\r\nfunction getStringEventHandler(eventOptions) {\r\n  return `ga('${DEVPORT_TRACKER_ALIAS}.send', 'event', ${JSON.stringify(eventOptions).replace(/\"/g, `'`)});`\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// products-and-docs/widgets/helpers/widgets-analytics.js","import widgetAnalytics, {\r\n  EVENT_CATEGORY,\r\n  CUSTOM_DIMENSIONS,\r\n  EVENT_NAME,\r\n} from 'helpers/widgets-analytics';\r\nimport universePlugin from 'helpers/universe-plugin';\r\n\r\nwidgetAnalytics.initialize(EVENT_CATEGORY.MAP_WIDGET);\r\n\r\nclass TicketmasterMapWidget {\r\n\r\n    set config(attrs) { this.widgetConfig = this.loadConfig(attrs); }\r\n    get config() { return this.widgetConfig; }\r\n\r\n    set events(responce){ this.eventsList = this.parseEvents(responce);}\r\n    get events(){ return this.eventsList;}\r\n\r\n    get isSimpleProportionM() { return this.config.proportion === 'm'}\r\n    get borderSize(){ return this.config.border || 0;}\r\n    get widgetHeight(){ return this.config.height || 600;}\r\n\r\n    get widgetContentHeight() {\r\n        // return this.widgetHeight - (this.isListView || this.isSimpleProportionM ? 0 : 39) || 600;\r\n        return this.widgetHeight;\r\n    }\r\n\r\n    get eventUrl(){ return \"https://www.ticketmaster.com/event/\"; }\r\n\r\n    get apiUrl(){ return \"https://app.ticketmaster.com/discovery-widgets/v2/events.json\"; }\r\n\r\n    get themeUrl() {\r\n        return (window.location.host === 'developer.ticketmaster.com')\r\n            ? `https://developer.ticketmaster.com/products-and-docs/widgets/map/1.0.0/theme/`\r\n            : `https://ticketmaster-api-staging.github.io/products-and-docs/widgets/map/1.0.0/theme/`;\r\n    }\r\n\r\n    get portalUrl(){\r\n        return (window.location.host === 'developer.ticketmaster.com')\r\n            ? `https://developer.ticketmaster.com/`\r\n            : `https://ticketmaster-api-staging.github.io/`;\r\n    }\r\n\r\n    get logoUrl() { return \"https://www.ticketmaster.com/\"; }\r\n\r\n    get legalNoticeUrl() { return \"http://developer.ticketmaster.com/support/terms-of-use/\"; }\r\n\r\n    get questionUrl() { return \"http://developer.ticketmaster.com/support/faq/\"; }\r\n\r\n    get widgetVersion() { return `${__VERSION__}`; }\r\n\r\n    get geocodeUrl() { return \"https://maps.googleapis.com/maps/api/geocode/json\"; }\r\n\r\n    get updateExceptions() { return [\"width\", \"height\", \"border\", \"borderradius\", \"colorscheme\", \"layout\", \"affiliateid\", \"propotion\", \"googleapikey\", \"latlong\"]}\r\n\r\n    get hideMessageDelay(){ return 5000; }\r\n\r\n    get controlHiddenClass(){ return \"events_control-hidden\"; }\r\n\r\n    get tmWidgetWhiteList(){ return [\"2200504BAD4C848F\", \"00005044BDC83AE6\", \"1B005068DB60687F\", \"1B004F4DBEE45E47\", \"3A004F4ED7829D5E\", \"3A004F4ED1FC9B63\", \"1B004F4FF83289C5\", \"1B004F4FC0276888\", \"0E004F4F3B7DC543\", \"1D004F4F09C61861\", \"1600505AC9A972A1\", \"22004F4FD82795C6\", \"01005057AFF54574\", \"01005056FAD8793A\", \"3A004F4FB2453240\", \"22004F50D2149AC6\", \"01005059AD49507A\", \"01005062B4236D5D\"]; }\r\n\r\n    get countriesWhiteList() {\r\n        return [\r\n            'Australia',\r\n            'Austria',\r\n            'Belgium',\r\n            'Canada',\r\n            'Denmark',\r\n            'Finland',\r\n            'France',\r\n            'Germany',\r\n            'Ireland',\r\n            'Mexico',\r\n            'Netherlands',\r\n            'New Zealand',\r\n            'Norway',\r\n            'Spain',\r\n            'Sweden',\r\n            'Turkey',\r\n            'UAE',\r\n            'United Kingdom',\r\n            'United States'\r\n        ]\r\n    }\r\n\r\n    isConfigAttrExistAndNotEmpty(attr) {\r\n        if( !this.config.hasOwnProperty(attr) || this.config[attr] === \"undefined\"){\r\n            return false;\r\n        }else if( this.config[attr] === \"\"){\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    get eventReqAttrs(){\r\n        let mapWidgetRoot = this.eventsRootContainer.parentNode;\r\n        let attrs = {},\r\n            params = [\r\n                {\r\n                    attr: 'tmapikey',\r\n                    verboseName: 'apikey'\r\n                },\r\n                {\r\n                    attr: 'latlong',\r\n                    verboseName: 'latlong'\r\n                },\r\n                {\r\n                    attr: 'postalcode',\r\n                    verboseName: 'postalCode'\r\n                },\r\n                {\r\n                    attr: 'keyword',\r\n                    verboseName: 'keyword'\r\n                },\r\n                {\r\n                    attr: 'size',\r\n                    verboseName: 'size'\r\n                },\r\n                {\r\n                    attr: 'radius',\r\n                    verboseName: 'radius'\r\n                },\r\n                {\r\n                    attr: 'attractionid',\r\n                    verboseName: 'attractionId'\r\n                },\r\n                {\r\n                    attr: 'promoterid',\r\n                    verboseName: 'promoterId'\r\n                },\r\n                {\r\n                    attr: 'venueid',\r\n                    verboseName: 'venueId'\r\n                },\r\n                {\r\n                    attr: 'classificationname',\r\n                    verboseName: 'classificationName'\r\n                },\r\n                {\r\n                    attr: 'city',\r\n                    verboseName: 'city'\r\n                },\r\n                {\r\n                    attr: 'countrycode',\r\n                    verboseName: 'countryCode'\r\n                },\r\n                {\r\n                    attr: 'source',\r\n                    verboseName: 'source'\r\n                }\r\n            ];\r\n\r\n        for(let i in params){\r\n            let item = params[i];\r\n            if(this.isConfigAttrExistAndNotEmpty(item.attr))\r\n                attrs[item.verboseName] = this.config[item.attr];\r\n        }\r\n\r\n        if(this.config.latlong){\r\n            attrs.latlong = this.config.latlong;\r\n        }\r\n\r\n        if(this.config.postalcode) {\r\n            attrs.postalcode = this.config.postalcode;\r\n        }\r\n\r\n        if(this.isConfigAttrExistAndNotEmpty(\"period\")){\r\n            let period = this.getDateFromPeriod(this.config.period);\r\n            attrs.startDateTime = period[0];\r\n            attrs.endDateTime = period[1];\r\n        }\r\n\r\n        if (this.config.tmapikey == '') {\r\n            attrs.apikey = apiKeyService.checkApiKeyCookie() || apiKeyService.getApiWidgetsKey();\r\n        }\r\n\r\n        if (mapWidgetRoot.getAttribute(\"w-latlong\") != '') {\r\n            attrs.latlong = mapWidgetRoot.getAttribute(\"w-latlong\");\r\n        }\r\n\r\n        if (attrs.latlong == ',') {\r\n            delete attrs.latlong;\r\n        }\r\n\r\n        if (attrs.latlong == null) {\r\n            delete attrs.latlong;\r\n        }\r\n\r\n        return attrs;\r\n    }\r\n\r\n    constructor(root) {\r\n        if(!root) return;\r\n        this.widgetRoot = root;\r\n        if (this.widgetRoot.querySelector('.events-root-container') === null) {\r\n            this.eventsRootContainer = document.createElement(\"div\");\r\n            this.eventsRootContainer.classList.add(\"events-root-container\");\r\n            this.widgetRoot.appendChild(this.eventsRootContainer);\r\n\r\n            this.config = this.widgetRoot.attributes;\r\n\r\n            this.eventsRoot = document.createElement(\"div\");\r\n            this.eventsRoot.classList.add(\"map\");\r\n            // this.eventsRoot.style.height = parseInt(parseInt(this.widgetHeight) + 25) + \"px\";\r\n            this.eventsRoot.style.height = this.widgetHeight + \"px\";\r\n            this.eventsRoot.style.width = this.config.width + \"px\";\r\n            this.eventsRootContainer.appendChild(this.eventsRoot);\r\n\r\n            if (this.config.theme !== null && !document.getElementById(`widget-theme-${this.config.theme}`)) {\r\n                this.addStylesheetForWidgetTheme();\r\n            }\r\n\r\n            this.eventsRootContainer.classList.remove(\"border\");\r\n            if (this.config.border) {\r\n                this.eventsRootContainer.classList.add(\"border\");\r\n            }\r\n\r\n            this.widgetRoot.style.height = `${this.widgetHeight}px`;\r\n            this.widgetRoot.style.width = `${this.config.width}px`;\r\n            this.eventsRootContainer.style.height = `${this.widgetHeight}px`;\r\n            this.eventsRootContainer.style.width = `${this.config.width}px`;\r\n            this.eventsRootContainer.style.borderRadius = `${this.config.borderradius}px`;\r\n            this.eventsRootContainer.style.borderWidth = `${this.borderSize}px`;\r\n\r\n            //this.clear();\r\n\r\n            this.AdditionalElements();\r\n\r\n            this.useGeolocation();\r\n\r\n            this.getCoordinates(() => {\r\n                this.makeRequest(this.eventsLoadingHandler, this.apiUrl, this.eventReqAttrs);\r\n            });\r\n            /*plugins for 'buy button'*/\r\n            universePlugin.embedUniversePlugin();\r\n            this.initMessage();\r\n\r\n            this.defaultAnalyticsProperties = {\r\n              eventCategory: EVENT_CATEGORY.MAP_WIDGET,\r\n              [CUSTOM_DIMENSIONS.API_KEY]: this.eventReqAttrs.apikey,\r\n            };\r\n\r\n            widgetAnalytics.sendEvent({\r\n              eventAction: EVENT_NAME.RENDERED,\r\n              ...this.defaultAnalyticsProperties,\r\n            });\r\n        }\r\n    }\r\n\r\n    getCoordinates(cb){\r\n        let widget = this;\r\n        if(this.config.postalcode) {\r\n            widget.config.postalcode = this.config.postalcode;\r\n            cb(widget.config.postalcode);\r\n        }else{\r\n            // Used in builder\r\n            if(widget.onLoadCoordinate) widget.onLoadCoordinate(null);\r\n            widget.config.latlong = '';\r\n            // widget.config.countrycode = '';\r\n            cb(widget.config.latlong);\r\n        }\r\n    }\r\n\r\n    // Message\r\n    initMessage(){\r\n        this.messageDialog = document.createElement('div');\r\n        this.messageDialog.classList.add(\"event-message\");\r\n        this.messageContent = document.createElement('div');\r\n        this.messageContent.classList.add(\"event-message__content\");\r\n\r\n        let messageClose = document.createElement('div');\r\n        messageClose.classList.add(\"event-message__btn\");\r\n        messageClose.addEventListener(\"click\", ()=> {\r\n            this.hideMessage();\r\n        });\r\n\r\n        this.messageDialog.appendChild(this.messageContent);\r\n        this.messageDialog.appendChild(messageClose);\r\n        this.eventsRootContainer.appendChild(this.messageDialog);\r\n    }\r\n\r\n    showMessage(message, hideMessageWithoutDelay){\r\n        if(message.length){\r\n            this.hideMessageWithoutDelay = hideMessageWithoutDelay;\r\n            this.messageContent.innerHTML = message;\r\n            this.messageDialog.classList.add(\"event-message-visible\");\r\n            if (this.messageTimeout) {\r\n                clearTimeout(this.messageTimeout); // Clear timeout if before 'hideMessageWithDelay' was called\r\n            }\r\n        }\r\n    }\r\n\r\n    hideMessageWithDelay(delay){\r\n        if(this.messageTimeout) clearTimeout(this.messageTimeout); // Clear timeout if this method was called before\r\n        this.messageTimeout = setTimeout(()=>{\r\n            this.hideMessage();\r\n        }, delay);\r\n    }\r\n\r\n    hideMessage(){\r\n        if(this.messageTimeout) clearTimeout(this.messageTimeout); // Clear timeout and hide message immediately.\r\n        this.messageDialog.classList.remove(\"event-message-visible\");\r\n    }\r\n    // End message\r\n\r\n    useGeolocation() {\r\n        var widget = this;\r\n        var clickNearMe = function(e) {\r\n            if (navigator.geolocation) {\r\n                navigator.geolocation.getCurrentPosition(function (position) {\r\n                    var latitude = position.coords.latitude;\r\n                    var longitude = position.coords.longitude;\r\n                    e.target.parentNode.setAttribute('w-latlong', latitude + ',' + longitude);\r\n                    widget.update();\r\n                });\r\n\r\n            }\r\n        };\r\n\r\n        var buttons = document.getElementsByClassName(\"near-me-btn\");\r\n        for (var i = 0; i < buttons.length; i++) {\r\n            var current = buttons[i];\r\n            current.addEventListener('click', clickNearMe, false);\r\n            current.addEventListener('touchstart', clickNearMe, false);\r\n        }\r\n    }\r\n\r\n    AdditionalElements(){\r\n        var nearMeBtn = document.createElement(\"span\");\r\n        nearMeBtn.classList.add('near-me-btn');\r\n        if (this.widgetRoot.getAttribute(\"w-geoposition\") !== 'on') nearMeBtn.classList.add('dn');\r\n        nearMeBtn.setAttribute('title', 'Show events near me');\r\n        this.widgetRoot.appendChild(nearMeBtn);\r\n\r\n        var legalNoticeContent = document.createTextNode('Legal Notice'),\r\n            legalNotice = document.createElement(\"a\");\r\n        legalNotice.appendChild(legalNoticeContent);\r\n        legalNotice.classList.add(\"legal-notice\");\r\n        legalNotice.target = '_blank';\r\n        legalNotice.href = this.legalNoticeUrl;\r\n        this.widgetRoot.appendChild(legalNotice);\r\n\r\n        var logo = document.createElement('a');\r\n        logo.classList.add(\"event-logo\",\"centered-logo\");\r\n        logo.target = '_blank';\r\n        logo.href = this.logoUrl;\r\n        logo.innerHTML = 'Powered by ';\r\n\r\n        var logoBox = document.createElement('div');\r\n        logoBox.classList.add(\"event-logo-box\");\r\n        logoBox.appendChild(logo);\r\n        this.eventsRootContainer.appendChild(logoBox);\r\n\r\n        let question = document.createElement('span');\r\n        question.classList.add(\"event-question\");\r\n        question.target = '_blank';\r\n        question.href = this.questionUrl;\r\n        question.addEventListener('click', toolTipHandler);\r\n        this.eventsRootContainer.appendChild(question);\r\n\r\n        let toolTip = document.createElement('div'),\r\n            tooltipHtml = `\r\n              <div class=\"tooltip-inner\"> \r\n                <a href=\"${this.questionUrl}\" target = \"_blank\" >About widget</a>\r\n                <div class=\"place\">version: <b>${this.widgetVersion}</b></div>\r\n              </div>`;\r\n        toolTip.classList.add(\"tooltip-version\");\r\n        toolTip.classList.add(\"left\");\r\n        toolTip.innerHTML = tooltipHtml;\r\n        this.eventsRootContainer.appendChild(toolTip);\r\n\r\n        function toolTipHandler(e) {\r\n            e.preventDefault();\r\n            e.target.nextSibling.classList.toggle('show-tip');\r\n        }\r\n    }\r\n\r\n    formatDate(date) {\r\n        var result = '';\r\n        if(!date.day) return result; // Day is required\r\n\r\n        function LZ(x) {\r\n            return (x < 0 || x > 9 ? \"\" : \"0\") + x\r\n        }\r\n        var MONTH_NAMES = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'],\r\n            DAY_NAMES = ['Sun','Mon','Tue','Wed','Thu','Fri','Sat'],\r\n            dayArray = date.day.split('-'),\r\n            d = parseInt(dayArray[2]),\r\n            M = parseInt(dayArray[1]);\r\n\r\n        // var E = new Date(date.day).getDay();\r\n        var E = new Date(+date.day.split('-')[0],(+date.day.split('-')[1])-1,+date.day.split('-')[2]).getDay();\r\n        result = DAY_NAMES[E] + ', ' + MONTH_NAMES[M - 1] + ' ' + d + ', ' + dayArray[0];\r\n\r\n        if(!date.time) return result;\r\n\r\n        var timeArray = date.time.split(':'),\r\n            H = parseInt(timeArray[0]),\r\n            m = timeArray[1],\r\n            a = \"AM\";\r\n\r\n        if (H > 11) a = \"PM\";\r\n        if (H == 0) {\r\n            H = 12;\r\n        } else if (H > 12) {\r\n            H = H - 12;\r\n        }\r\n\r\n        return result + ' ' + LZ(H) + ':' + m + ' ' + a;\r\n    }\r\n\r\n    clearEvents(){\r\n        this.eventsRoot.innerHTML = \"\";\r\n    }\r\n\r\n    clear(){\r\n        var modificatorList = this.widgetRoot.getElementsByClassName('modificator');\r\n        while (modificatorList.length) {\r\n            let el = modificatorList[0],\r\n                parent = el.parentNode;\r\n            parent.removeChild(el);\r\n        }\r\n        this.clearEvents();\r\n    }\r\n\r\n    update() {\r\n\r\n        let oldTheme = this.config.constructor();\r\n        for (let attr in this.config) {\r\n            if (this.config.hasOwnProperty(attr)) oldTheme[attr] = this.config[attr];\r\n        }\r\n\r\n        this.config = this.widgetRoot.attributes;\r\n\r\n        this.widgetRoot.style.height = `${this.widgetHeight}px`;\r\n        this.widgetRoot.style.width  = `${this.config.width}px`;\r\n        this.eventsRootContainer.style.height = `${this.widgetContentHeight}px`;\r\n        this.eventsRootContainer.style.width  = `${this.config.width}px`;\r\n        this.eventsRootContainer.style.borderRadius = `${this.config.borderradius}px`;\r\n        this.eventsRootContainer.style.borderWidth = `${this.borderSize}px`;\r\n\r\n        this.eventsRootContainer.classList.remove(\"border\");\r\n        if( this.config.hasOwnProperty(\"border\") ){\r\n            this.eventsRootContainer.classList.add(\"border\");\r\n        }\r\n\r\n        this.clear();\r\n        this.getCoordinates(() => {\r\n            this.makeRequest( this.eventsLoadingHandler, this.apiUrl, this.eventReqAttrs );\r\n        });\r\n\r\n        let events = this.eventsRoot.getElementsByClassName(\"event-wrapper\");\r\n        this.useGeolocation();\r\n\r\n    }\r\n\r\n    needToUpdate(newTheme, oldTheme, forCheck = []){\r\n        return Object.keys(newTheme).map(function(key){\r\n                if(forCheck.indexOf(key) > -1) return true;\r\n                //console.warn([key, newTheme[key], oldTheme[key], newTheme[key] === oldTheme[key]])\r\n                return newTheme[key] === oldTheme[key] ;\r\n            }).indexOf(false) > -1\r\n    }\r\n\r\n    loadConfig(NamedNodeMap){\r\n        var config = {};\r\n        Object.keys(NamedNodeMap).map(function(value){\r\n            if( typeof(NamedNodeMap[value].name) !== \"undefined\" && NamedNodeMap[value].name.indexOf(\"w-\") !== -1){\r\n                config[ NamedNodeMap[value].name.replace(/w-/g, \"\").replace(/-/g, \"\") ] = NamedNodeMap[value].value;\r\n            }\r\n        });\r\n        return config;\r\n    }\r\n\r\n    addStylesheetForWidgetTheme() {\r\n      const styleLinkElem = document.createElement('link');\r\n      styleLinkElem.setAttribute('rel', 'stylesheet');\r\n      styleLinkElem.setAttribute('type', 'text/css');\r\n      styleLinkElem.setAttribute('href', `${this.themeUrl}${this.config.theme}.css`);\r\n      styleLinkElem.setAttribute('id', `widget-theme-${this.config.theme}`);\r\n      document.getElementsByTagName('head')[0].appendChild(styleLinkElem);\r\n    }\r\n\r\n    groupEventsByName(){\r\n        let groups = {};\r\n        this.events.map(function(event){\r\n            if (groups[event.name] === undefined) groups[event.name] = [];\r\n            groups[event.name].push(event);\r\n        });\r\n\r\n        this.eventsGroups = [];\r\n        for (let groupName in groups) {\r\n            this.eventsGroups.push(groups[groupName]);\r\n        }\r\n    }\r\n\r\n    resetReduceParamsOrder(){\r\n        this.reduceParamsOrder = 0;\r\n    }\r\n\r\n    reduceParamsAndReloadEvents(){\r\n        let eventReqAttrs = {},\r\n            reduceParamsList = [\r\n                ['classificationName'],\r\n                ['city'],\r\n                ['countryCode'],\r\n                ['source'],\r\n                ['startDateTime', 'endDateTime', 'country'],\r\n                ['radius'],\r\n                ['postalCode', 'latlong'],\r\n                ['attractionId'],\r\n                ['promoterId'],\r\n                // ['segmentId'],\r\n                ['venueId'],\r\n                ['keyword'],\r\n                ['size']\r\n            ];\r\n\r\n        // make copy of params\r\n        for(let key in this.eventReqAttrs){\r\n            eventReqAttrs[key] = this.eventReqAttrs[key]\r\n        }\r\n\r\n        if(!this.reduceParamsOrder) this.reduceParamsOrder = 0;\r\n        if(reduceParamsList.length > this.reduceParamsOrder){\r\n            for(let item in reduceParamsList){\r\n                if(this.reduceParamsOrder >= item){\r\n                    for(let i in reduceParamsList[item]){\r\n                        delete eventReqAttrs[reduceParamsList[item][i]];\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(this.reduceParamsOrder === 0) this.showMessage(\"No results were found.<br/>Here other options for you.\");\r\n            this.reduceParamsOrder++;\r\n            this.makeRequest( this.eventsLoadingHandler, this.apiUrl, eventReqAttrs );\r\n        }else{\r\n            // We haven't any results\r\n            this.showMessage(\"No results were found.\", true);\r\n            this.reduceParamsOrder = 0;\r\n        }\r\n    }\r\n\r\n    setMarkers(map, markers) {\r\n\r\n        var infowindow = new google.maps.InfoWindow({\r\n            content: \" \",\r\n        });\r\n\r\n        var image = {\r\n            url: 'https://ticketmaster-api-staging.github.io/assets/widgets/1.0.0/img/marker.svg',\r\n            size: new google.maps.Size(22, 32),\r\n            origin: new google.maps.Point(0, 0),\r\n            anchor: new google.maps.Point(22, 32)\r\n        };\r\n\r\n        var imageActive = {\r\n            url: 'https://ticketmaster-api-staging.github.io/assets/widgets/1.0.0/img/marker-active.svg',\r\n            size: new google.maps.Size(22, 32),\r\n            origin: new google.maps.Point(0, 0),\r\n            anchor: new google.maps.Point(22, 32)\r\n        };\r\n\r\n        for (var i = 0; i < markers.length; i++) {\r\n            let sites = markers[i];\r\n            if (sites !== undefined) {\r\n                var siteLatLng = new google.maps.LatLng(sites[1], sites[2]);\r\n                var marker = new google.maps.Marker({\r\n                    position: siteLatLng,\r\n                    map: map,\r\n                    icon: image,\r\n                    title: sites[0],\r\n                    zIndex: sites[3],\r\n                    html: sites[4]\r\n                });\r\n            }\r\n            google.maps.event.addListener(marker, \"click\", function () {\r\n                infowindow.setContent(this.html);\r\n                infowindow.open(map, this);\r\n            });\r\n            google.maps.event.addListener(marker, 'mouseover', function() {\r\n                this.setIcon(imageActive);\r\n            });\r\n            google.maps.event.addListener(marker, 'mouseout', function() {\r\n                this.setIcon(image);\r\n            });\r\n        }\r\n    }\r\n\r\n    eventsLoadingHandler(){\r\n        let widget = this.widget;\r\n        var markers = [];\r\n        widget.clearEvents(); // Additional clearing after each loading\r\n        if (this && this.readyState == XMLHttpRequest.DONE ) {\r\n            if(this.status == 200){\r\n                widget.events = JSON.parse(this.responseText);\r\n                if(widget.events.length){\r\n\r\n                    var myLatLng = {lat: 34.0390107, lng: -118.2672801};\r\n\r\n                    var map = new google.maps.Map(widget.widgetRoot.firstChild.firstChild, {\r\n                        zoom: 4,\r\n                        center: myLatLng,\r\n                        mapTypeId: google.maps.MapTypeId.ROADMAP,\r\n                        mapTypeControl: false,\r\n                        panControl: false,\r\n                        streetViewControl: false,\r\n                        zoomControlOptions: {\r\n                            position: google.maps.ControlPosition.RIGHT_CENTER\r\n                        },\r\n                    });\r\n\r\n                    var latlngbounds = new google.maps.LatLngBounds();\r\n\r\n                    widget.groupEventsByName.call(widget);\r\n\r\n                    for (let e=0; e < widget.events.length; e++) {\r\n\r\n                        if (widget.events[e].location !== undefined) {\r\n                            let place = '';\r\n                            let address = '';\r\n                            let date = widget.formatDate({\r\n                                day: widget.events[e].date.day,\r\n                                time: widget.events[e].date.time\r\n                            });\r\n                            if (widget.events[e].address.hasOwnProperty('name')) {\r\n                                place = widget.events[e].address.name + ', ';\r\n                            }\r\n                            else {\r\n                                place = '';\r\n                            }\r\n                            if (widget.events[e].address.hasOwnProperty('line1')) {\r\n                                address = widget.events[e].address.line1;\r\n                            } else {\r\n                                address = '';\r\n                            }\r\n\r\n                            let buyBtn = '';\r\n                            const devPortBuyButtonClick = widgetAnalytics.getStringEventHandler({\r\n                              eventAction: EVENT_NAME.BUY_BUTTON_CLICK,\r\n                              eventLabel: widget.events[e].url,\r\n                              ...widget.defaultAnalyticsProperties,\r\n                            });\r\n                            const buyButtonClickHandler = `ga('send', 'event', 'DiscoveryClickBuyButton', 'click'); ${devPortBuyButtonClick}`;\r\n\r\n                            buyBtn = `\r\n                              <a class=\"buybtn\" href=\"${widget.events[e].url}\" onclick=\"${buyButtonClickHandler}\" target=\"_blank\">\r\n                                BUY NOW\r\n                              </a>\r\n                            `;\r\n                            const devPortEventNameClick = widgetAnalytics.getStringEventHandler({\r\n                              eventAction: EVENT_NAME.EVENT_NAME_CLICK,\r\n                              eventLabel: widget.events[e].url,\r\n                              ...widget.defaultAnalyticsProperties,\r\n                            });\r\n                            const eventNameClickHandler = `ga('send', 'event', 'DiscoveryClickeventName', 'click'); ${devPortEventNameClick}`;\r\n\r\n                            let eventMarkup = `\r\n                              <div class=\"infowindow\" style=\"width:220px!important;padding-right:5px!important;line-height:normal;overflow:auto;\">\r\n                                <a class=\"an\" href=\"${widget.events[e].url}\" onclick=\"${eventNameClickHandler}\" target=\"_blank\">\r\n                                  <span class=\"img\" style=\"background:url('${widget.events[e].img}') center center no-repeat\"></span>\r\n                                  <span class=\"name\">${widget.events[e].name}</span>\r\n                                </a>\r\n                                ${buyBtn}\r\n                                <div class=\"dateplace\"><span class=\"date\">${date}</span><span class=\"place\">${place + address}</span></div>\r\n                              </div>\r\n                            `;\r\n\r\n                            markers[e] = [\r\n                                widget.events[e].name,\r\n                                widget.events[e].location.lat,\r\n                                widget.events[e].location.lng,\r\n                                e,\r\n                               eventMarkup,\r\n                            ];\r\n                            latlngbounds.extend(new google.maps.LatLng(widget.events[e].location.lat, widget.events[e].location.lng));\r\n                        }\r\n                    }\r\n                    map.fitBounds( latlngbounds );\r\n\r\n                    widget.setMarkers(map ,markers);\r\n\r\n\r\n                    widget.resetReduceParamsOrder();\r\n                    if(widget.hideMessageWithoutDelay)\r\n                        widget.hideMessage();\r\n                    else\r\n                        widget.hideMessageWithDelay(widget.hideMessageDelay);\r\n                }else{\r\n                    widget.reduceParamsAndReloadEvents.call(widget);\r\n                }\r\n            }\r\n            else if(this.status == 400) {\r\n                widget.reduceParamsAndReloadEvents.call(widget);\r\n                console.log('There was an error 400');\r\n            }\r\n            else {\r\n                widget.reduceParamsAndReloadEvents.call(widget);\r\n                console.log('something else other than 200 was returned');\r\n            }\r\n        }\r\n    }\r\n\r\n    getImageForEvent(images){\r\n        let imgWidth;\r\n        let idx;\r\n        images.forEach(function (img, i) {\r\n            if (i == 0) imgWidth = img.width;\r\n            if (imgWidth > img.width) {\r\n                imgWidth = img.width;\r\n                idx = i;\r\n            }\r\n        });\r\n        return (idx === undefined) ? '' : images[idx].url;\r\n    }\r\n\r\n    parseEvents(eventsSet){\r\n        if(!eventsSet._embedded){\r\n            if(typeof($widgetModalNoCode) !== \"undefined\"){\r\n                $widgetModalNoCode.modal();\r\n            }\r\n            return [];\r\n        }\r\n        eventsSet = eventsSet._embedded.events;\r\n        var tmpEventSet = [];\r\n\r\n        for(var key in eventsSet){\r\n            if(eventsSet.hasOwnProperty(key)){\r\n                let currentEvent = {};\r\n\r\n                currentEvent.id = eventsSet[key].id;\r\n                currentEvent.url = eventsSet[key].url;\r\n                currentEvent.name = eventsSet[key].name;\r\n\r\n                /* Change URL [START] */\r\n                var parser = document.createElement(\"a\");\r\n                parser.href = currentEvent.url;\r\n                var expr= \"/ticketmaster.evyy.net/\";\r\n                if (parser.href.match(expr) !== null) {\r\n                    var changeURL = parser.pathname.split('/');\r\n                    changeURL[3] = '330564';\r\n                    currentEvent.url = parser.origin + changeURL.join('/') + parser.search + parser.hash;\r\n                }\r\n                /* Change URL [END] */\r\n\r\n                currentEvent.date = {\r\n                    day: eventsSet[key].dates.start.localDate,\r\n                    time: eventsSet[key].dates.start.localTime\r\n                };\r\n\r\n                if(eventsSet[key].hasOwnProperty('_embedded') && eventsSet[key]._embedded.hasOwnProperty('venues')){\r\n                    let venue = eventsSet[key]._embedded.venues[0];\r\n                    if(venue){\r\n                        if(venue.address)\r\n                            currentEvent.address = venue.address;\r\n\r\n                        if(venue.name) {\r\n                            if(!currentEvent.address) currentEvent.address = {};\r\n                            currentEvent.address.name = venue.name;\r\n                        }\r\n\r\n                        if (venue.location) {\r\n                            currentEvent.location = {\r\n                                lat: parseFloat(venue.location.latitude),\r\n                                lng: parseFloat(venue.location.longitude)\r\n                            };\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Remove this comment to get categories\r\n                /*if(eventsSet[key]._embedded.hasOwnProperty('categories')){\r\n                 currentEvent.categories = [];\r\n                 let eventCategories = eventsSet[key]._embedded.categories;\r\n                 currentEvent.categories = Object.keys(eventCategories).map(function(category){\r\n                 return eventCategories[category].name\r\n                 });\r\n                 }*/\r\n\r\n                currentEvent.img = this.getImageForEvent(eventsSet[key].images);\r\n                tmpEventSet.push(currentEvent);\r\n\r\n            }\r\n        }\r\n        return tmpEventSet;\r\n    }\r\n\r\n    makeRequest(handler, url=this.apiUrl, attrs={}, method=\"GET\"){\r\n        attrs = Object.keys(attrs).map(function(key){\r\n            return `${key}=${attrs[key]}`;\r\n        }).join(\"&\");\r\n\r\n        url = [url,attrs].join(\"?\");\r\n\r\n        this.xmlHTTP = window.XMLHttpRequest ? new XMLHttpRequest() : new ActiveXObject(\"Microsoft.XMLHTTP\");\r\n        if(method == \"POST\") {\r\n            this.xmlHTTP.setRequestHeader(\"Content-type\",\"application/x-www-form-urlencoded\");\r\n        }\r\n        this.xmlHTTP.widget = this;\r\n        this.xmlHTTP.onreadystatechange = handler;\r\n        this.xmlHTTP.open(method, url, true);\r\n        this.xmlHTTP.send();\r\n    }\r\n\r\n    initPretendedLink(el, url, isBlank){\r\n        if(el && url){\r\n            el.setAttribute('data-url', url);\r\n            el.classList.add(\"event-pretended-link\");\r\n            el.addEventListener('click', function(){\r\n                let url = this.getAttribute('data-url');\r\n                if(url){\r\n                    let win = window.open(url, (isBlank ? '_blank' : '_self'));\r\n                    win.focus();\r\n                }\r\n            });\r\n            el.addEventListener('touchstart', function(){\r\n                let url = this.getAttribute('data-url');\r\n                if(url){\r\n                    let win = window.open(url, (isBlank ? '_blank' : '_self'));\r\n                    win.focus();\r\n                }\r\n            });\r\n        }\r\n        return el;\r\n    }\r\n\r\n    makeImageUrl(id){\r\n        return `https://app.ticketmaster.com/discovery-widgets/v2/events/${id}/images.json`;\r\n    }\r\n\r\n    /*\r\n     * Config block\r\n     */\r\n\r\n    decConfig(config){\r\n        return JSON.parse(window.atob(config));\r\n    }\r\n\r\n    encConfig(config){\r\n        return window.btoa(config);\r\n    }\r\n\r\n    toShortISOString(dateObj){\r\n        return dateObj.getFullYear() +\r\n            \"-\" + (dateObj.getMonth() + 1 < 10 ? \"0\"+ (dateObj.getMonth()+ 1): dateObj.getMonth() + 1) +\r\n            \"-\" + (dateObj.getDate() < 10 ? \"0\"+ dateObj.getDate(): dateObj.getDate()) +\r\n            \"T\" + (dateObj.getHours() < 10 ? \"0\"+dateObj.getHours(): dateObj.getHours()) +\r\n            \":\" + (dateObj.getMinutes() < 10 ? \"0\"+dateObj.getMinutes(): dateObj.getMinutes()) +\r\n            \":\" + (dateObj.getSeconds() < 10 ? \"0\"+dateObj.getSeconds(): dateObj.getSeconds()) +\r\n            \"Z\";\r\n    }\r\n\r\n    getDateFromPeriod(period){\r\n\r\n        var period = period.toLowerCase(),\r\n            firstDay, lastDay;\r\n\r\n        if(period == \"year\" ) {\r\n            // firstDay = new Date( new Date(new Date()).toISOString() );\r\n            // lastDay = new Date( new Date(new Date().valueOf()+24*365*60*60*1000).toISOString() );\r\n            firstDay = new Date().toISOString().slice(0,19) + 'Z';\r\n            lastDay = new Date(new Date().valueOf()+24*365*60*60*1000).toISOString().slice(0,19) + 'Z';\r\n        }\r\n        else if(period == \"month\") {\r\n            // firstDay = new Date( new Date(new Date()).toISOString() );\r\n            // lastDay = new Date( new Date(new Date().valueOf()+24*31*60*60*1000).toISOString() );\r\n            firstDay = new Date().toISOString().slice(0,19) + 'Z';\r\n            lastDay = new Date(new Date().valueOf()+24*31*60*60*1000).toISOString().slice(0,19) + 'Z';\r\n        }\r\n        else if(period == \"week\") {\r\n            // firstDay = new Date( new Date(new Date()).toISOString() );\r\n            // lastDay = new Date( new Date(new Date().valueOf()+24*7*60*60*1000).toISOString() );\r\n            firstDay = new Date().toISOString().slice(0,19) + 'Z';\r\n            lastDay = new Date(new Date().valueOf()+24*7*60*60*1000).toISOString().slice(0,19) + 'Z';\r\n        } else {\r\n            // firstDay = new Date( new Date(new Date()).toISOString() );\r\n            // lastDay = new Date( new Date(new Date().valueOf()+24*60*60*1000).toISOString() );\r\n            firstDay = new Date().toISOString().slice(0,19) + 'Z';\r\n            lastDay = new Date(new Date().valueOf()+24*60*60*1000).toISOString().slice(0,19) + 'Z';\r\n        }\r\n\r\n        // return [this.toShortISOString(firstDay), this.toShortISOString(lastDay)];\r\n        return [firstDay, lastDay];\r\n    }\r\n\r\n}\r\nlet widgetsMap = [];\r\n(function () {\r\n    let widgetContainers = document.querySelectorAll(\"div[w-type='map']\");\r\n    for (let i = 0; i < widgetContainers.length; ++i) {\r\n        widgetsMap.push(new TicketmasterMapWidget(widgetContainers[i]));\r\n    }\r\n\r\n})();\r\n\r\n\r\n\r\nif(typeof module !== \"undefined\") {\r\n    module.exports = { TicketmasterMapWidget, widgetsMap };\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// products-and-docs/widgets/map/1.0.0/src/main-widget.es6"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChEA;AACA;AADA;AAGA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;ACfA;AACA;AACA;AACA;AAHA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACpDA;AACA;;;AAIA;AACA;;;;;;;;;AACA;AACA;AACA;;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAhFA;AAAA;AAAA;AACA;AAAA;AAAA;;;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AACA;AAAA;AAAA;;;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AACA;AAGA;;;AAEA;AACA;AAGA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AAAA;AAAA;;;AAEA;AACA;AAqBA;;;AAWA;AACA;AACA;AAAA;AAGA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AAKA;AACA;AAFA;AACA;AAKA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAIA;AACA;AADA;AAIA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAAA;AAWA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAPA;AACA;AAWA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAKA;AACA;AACA;AAKA;AACA;AACA;AAFA;AAKA;AACA;AACA;AACA;AAUA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAIA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AAQA;AACA;AAEA;AACA;AACA;AACA;;;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;AACA;;;;;;AAIA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AAOA;;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;;;A","sourceRoot":""}